// <auto-generated />
using System;
using Conecta.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Conecta.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241114232926_MoreSeedDataInProfilesTable")]
    partial class MoreSeedDataInProfilesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Conecta.Models.Profile", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.Property<string>("Biography")
                        .HasColumnType("TEXT")
                        .HasColumnName("biography");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT")
                        .HasColumnName("image_url");

                    b.Property<string>("OtherDetails")
                        .HasColumnType("TEXT")
                        .HasColumnName("other_details");

                    b.HasKey("UserId");

                    b.ToTable("profiles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Biography = "Naci en bello en el 2007",
                            OtherDetails = "Quiero estudiar ingenieria de sistemas"
                        },
                        new
                        {
                            UserId = 2,
                            Biography = "Naci en Chicago en el 2000",
                            OtherDetails = "Quiero estudiar Inteligencia artificial"
                        });
                });

            modelBuilder.Entity("Conecta.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("creation_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.ToTable("role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 14, 18, 29, 25, 30, DateTimeKind.Local).AddTicks(943),
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 14, 18, 29, 25, 32, DateTimeKind.Local).AddTicks(2882),
                            Name = "user"
                        });
                });

            modelBuilder.Entity("Conecta.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("creation_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 14, 18, 29, 25, 395, DateTimeKind.Local).AddTicks(5210),
                            Email = "zapata.devs@gmail.com",
                            Name = "Juan Jose",
                            Password = "$2a$11$zlZybQ6ir.BMm60A55M6ceNOvG7lMNi84LMg6NOMuCa6JaBz2/vui",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 14, 18, 29, 25, 573, DateTimeKind.Local).AddTicks(8886),
                            Email = "user@example.com",
                            Name = "Test",
                            Password = "$2a$11$ZXbYi0i6BYU6Czy0BoG/guJg.MUPNrWaJwV9QQKhk3RcKqX9Pf3h6",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Conecta.Models.Profile", b =>
                {
                    b.HasOne("Conecta.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Conecta.Models.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Conecta.Models.User", b =>
                {
                    b.HasOne("Conecta.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Conecta.Models.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
